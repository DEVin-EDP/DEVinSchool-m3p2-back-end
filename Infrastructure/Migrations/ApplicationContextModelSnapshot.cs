// <auto-generated />
using System;
using Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.CategoriaCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.ToTable("CategoriaCurso");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Titulo = "Tecnologia"
                        },
                        new
                        {
                            Id = 2,
                            Titulo = "Administração"
                        },
                        new
                        {
                            Id = 3,
                            Titulo = "Marketing"
                        },
                        new
                        {
                            Id = 4,
                            Titulo = "Design"
                        });
                });

            modelBuilder.Entity("Domain.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int")
                        .HasColumnName("carga_horaria");

                    b.Property<int>("CategoriaCursoId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_curso");

                    b.Property<bool>("CursoAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("curso_ativo");

                    b.Property<string>("Informacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("informacao");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imagem_curso");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Resumo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resumo");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaCursoId");

                    b.ToTable("Curso");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargaHoraria = 60,
                            CategoriaCursoId = 1,
                            CursoAtivo = true,
                            Informacao = "Curso de Java para iniciantes",
                            Link = "https://w7.pngwing.com/pngs/961/251/png-transparent-java-runtime-environment-programming-language-programmer-computer-programming-java-text-logo-software-developer.png",
                            Nome = "Curso de Java",
                            Resumo = "Introdução ao Java"
                        },
                        new
                        {
                            Id = 2,
                            CargaHoraria = 12546,
                            CategoriaCursoId = 2,
                            CursoAtivo = true,
                            Informacao = "Administração de Empresas para iniciantes",
                            Link = "https://i.pinimg.com/originals/8a/1a/5c/8a1a5c0186881d4a51783bd72b764f9f.png",
                            Nome = "Adm de Empresas",
                            Resumo = "Introdução a Administração de Empresas"
                        },
                        new
                        {
                            Id = 3,
                            CargaHoraria = 120,
                            CategoriaCursoId = 3,
                            CursoAtivo = true,
                            Informacao = "Introdução a marketing utilizando redes sociais",
                            Link = "https://w7.pngwing.com/pngs/702/844/png-transparent-social-media-marketing-digital-marketing-digital-media-social-media-text-service-social-media-marketing.png",
                            Nome = "Marketing de Redes Sociais",
                            Resumo = "aprenda utilizar redes sociais para alavancar o seu negócio"
                        },
                        new
                        {
                            Id = 4,
                            CargaHoraria = 60,
                            CategoriaCursoId = 4,
                            CursoAtivo = true,
                            Informacao = "Técnicas de Designer gráfico.",
                            Link = "https://e7.pngegg.com/pngimages/850/473/png-clipart-logo-graphic-design-graphics-product-design-logo-graphic-design.png",
                            Nome = "Introdução ao Design Gráfico",
                            Resumo = "Aprenda técnicas essenciais para ser um Designer gráfico."
                        },
                        new
                        {
                            Id = 5,
                            CargaHoraria = 100,
                            CategoriaCursoId = 1,
                            CursoAtivo = true,
                            Informacao = "Técnicas de Banco de Dados.",
                            Link = "https://w7.pngwing.com/pngs/108/671/png-transparent-database-administrator-computer-icons-others-orange-logo-data.png",
                            Nome = "Tecnologia em Banco de Dados",
                            Resumo = "Aprenda aprenderá como trabalhar com grande quantidade de informações e dados que entram no banco de dados de uma empresa, como por exemplo, salários, lista de clientes e fornecedores, relatórios, dentre outros. É uma atividade muito minuciosa, na qual o profissional a desenvolverá sendo incumbido de organizar tais dados, de modo a deixá-los sempre atualizados, realizando a manutenção dos mesmos."
                        },
                        new
                        {
                            Id = 6,
                            CargaHoraria = 60,
                            CategoriaCursoId = 1,
                            CursoAtivo = true,
                            Informacao = "Rede de Computadores para iniciantes",
                            Link = "https://e7.pngegg.com/pngimages/863/566/png-clipart-computer-network-computer-icons-local-area-network-information-technology-internet-computer-computer-network-computer.png",
                            Nome = "Tecnologia em rede de Computadores",
                            Resumo = "O estudante aprenderá como disponibilizar várias redes e gerenciar todas elas para a empresa, como intranet, bluetooth, WI-FI, internet e LAN, além de sistemas de seguranças para não haver prejuízos."
                        },
                        new
                        {
                            Id = 7,
                            CargaHoraria = 900,
                            CategoriaCursoId = 1,
                            CursoAtivo = true,
                            Informacao = "Faculdade contendo tudo que engloba sistema de informação.",
                            Link = "https://w7.pngwing.com/pngs/435/773/png-transparent-information-system-sao-paulo-state-technological-college-technology-technology.png",
                            Nome = "Sistema de Informação",
                            Resumo = "curso em que se aprende a trabalhar com redes de computadores podendo administrar, criar, garantir a segurança das redes, instalar e configurar sistemas de softwares, dentre outros aprendizados."
                        },
                        new
                        {
                            Id = 8,
                            CargaHoraria = 124,
                            CategoriaCursoId = 2,
                            CursoAtivo = true,
                            Informacao = "As atividades que este profissional realiza em seu cotidiano dependem do setor da economia.",
                            Link = "https://w7.pngwing.com/pngs/335/1019/png-transparent-logistics-international-trade-export-transport-others-freight-transport-service-cargo.png",
                            Nome = "Administração de Comércio exterior.",
                            Resumo = "O profissional que atua na área de Comércio Exterior é o responsável por realizar a compra e venda de produtos e serviços entre instituições de diferentes países. É por isso que ele sempre precisa estar atento ao que acontece no mundo todo, principalmente nos assuntos econômicos, sociais e políticos do país em que se está negociando."
                        },
                        new
                        {
                            Id = 9,
                            CargaHoraria = 120,
                            CategoriaCursoId = 3,
                            CursoAtivo = true,
                            Informacao = "Quando falamos de profissionais de nível avançado, estamos nos referindo a especialistas.",
                            Link = "https://w7.pngwing.com/pngs/48/230/png-transparent-digital-marketing-mass-media-marketing-text-computer-logo.png",
                            Nome = "Master em Marketing e Comunicação Digital",
                            Resumo = "tem como principal objetivo oferecer conhecimentos e habilidades para que o profissional esteja capacitado a utilizar a internet em processos de vendas empresariais, com o intuito de aumentar a competitividade da organização no mercado de trabalho."
                        },
                        new
                        {
                            Id = 10,
                            CargaHoraria = 60,
                            CategoriaCursoId = 4,
                            CursoAtivo = true,
                            Informacao = "Habilitado para criar, projetar e realizar a execução de jogos eletrônicos para diversos aparelhos, como smartphones, tablets ou computadores.",
                            Link = "https://w7.pngwing.com/pngs/50/329/png-transparent-video-game-development-computer-icons-video-game-developer-design.png",
                            Nome = "Design de Games",
                            Resumo = "O profissional da área de Design de Games precisa compreender o público-alvo e as tendências do mercado que ele está inserido. Dentro do processo de produção, o Designer de Games tomará decisões com o objetivo de tornar o seu produto atraente e operante."
                        });
                });

            modelBuilder.Entity("Domain.Models.CursoSalvo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCursoSalvo")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_curso_salvo");

                    b.Property<string>("StatusCurso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("status_curso");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CursoSalvo");
                });

            modelBuilder.Entity("Domain.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("Perfil");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "usuario"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "admin"
                        });
                });

            modelBuilder.Entity("Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("foto");

                    b.Property<int>("Idade")
                        .HasColumnType("int")
                        .HasColumnName("idade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int")
                        .HasColumnName("perfil_funcao");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.Property<bool>("UsuarioAtivo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "11122233308",
                            DataCadastro = new DateTime(2023, 4, 16, 18, 18, 26, 643, DateTimeKind.Local).AddTicks(467),
                            Email = "teste@gmail.com",
                            Foto = "https://i.pinimg.com/236x/37/01/e7/3701e763f6ded4234b68d8fac1a9fa85.jpg",
                            Idade = 30,
                            Nome = "teste",
                            PerfilId = 2,
                            Senha = "teste123",
                            UsuarioAtivo = true
                        },
                        new
                        {
                            Id = 2,
                            CPF = "11122233308",
                            DataCadastro = new DateTime(2023, 4, 16, 18, 18, 26, 643, DateTimeKind.Local).AddTicks(860),
                            Email = "tiago@gmail.com",
                            Foto = "https://i.pinimg.com/236x/05/0b/72/050b721378546e519bd6e33c4ccf9630.jpg",
                            Idade = 22,
                            Nome = "Tiago",
                            PerfilId = 1,
                            Senha = "tester12345678",
                            UsuarioAtivo = true
                        },
                        new
                        {
                            Id = 3,
                            CPF = "11122233308",
                            DataCadastro = new DateTime(2023, 4, 16, 18, 18, 26, 643, DateTimeKind.Local).AddTicks(863),
                            Email = "josé@gmail.com",
                            Foto = "https://pbs.twimg.com/profile_images/1268204267749494788/az__pHAX_400x400.jpg",
                            Idade = 55,
                            Nome = "José",
                            PerfilId = 1,
                            Senha = "tester12345678",
                            UsuarioAtivo = true
                        },
                        new
                        {
                            Id = 5,
                            CPF = "12345278412",
                            DataCadastro = new DateTime(2023, 4, 16, 18, 18, 26, 643, DateTimeKind.Local).AddTicks(865),
                            Email = "ana@mail.com",
                            Foto = "https://example.com/myphoto.jpg",
                            Idade = 32,
                            Nome = "Ana Martha",
                            PerfilId = 1,
                            Senha = "ana12345",
                            UsuarioAtivo = true
                        },
                        new
                        {
                            Id = 6,
                            CPF = "78945612345",
                            DataCadastro = new DateTime(2023, 4, 16, 18, 18, 26, 643, DateTimeKind.Local).AddTicks(867),
                            Email = "callas@mail.com",
                            Foto = "https://example.com/myphoto.jpg",
                            Idade = 30,
                            Nome = "Maria Callas",
                            PerfilId = 1,
                            Senha = "123asdfg",
                            UsuarioAtivo = true
                        },
                        new
                        {
                            Id = 7,
                            CPF = "23456242189",
                            DataCadastro = new DateTime(2023, 4, 16, 18, 18, 26, 643, DateTimeKind.Local).AddTicks(872),
                            Email = "rita@mail.com\"",
                            Foto = "https://example.com/myphoto.jpg",
                            Idade = 82,
                            Nome = "Rita Lee",
                            PerfilId = 1,
                            Senha = "rita1234",
                            UsuarioAtivo = true
                        });
                });

            modelBuilder.Entity("Domain.Models.Curso", b =>
                {
                    b.HasOne("Domain.Models.CategoriaCurso", "CategoriaCurso")
                        .WithMany()
                        .HasForeignKey("CategoriaCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaCurso");
                });

            modelBuilder.Entity("Domain.Models.CursoSalvo", b =>
                {
                    b.HasOne("Domain.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Models.Usuario", b =>
                {
                    b.HasOne("Domain.Models.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });
#pragma warning restore 612, 618
        }
    }
}
